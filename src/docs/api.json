{
  "openapi": "3.0.3",
  "info": {
    "description": "A simple AutoDrive API that supports authentication, work with trips",
    "version": "1.0.0",
    "title": "AutoDrive Api",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "servers": [
    {
      "url": "http://localhost:5000/api/v1"
    }
  ],
  "tags": [
    {
      "name": "Auth"
    },
    {
      "name": "Trips"
    },
    { "name": "Users" },
    {
      "name": "Coming soon"
    }
  ],
  "schemes": ["http"],
  "host": "localhost:8080",
  "basePath": "/api/v1",
  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "Register new user",
        "operationId": "registerUser",
        "requestBody": {
          "description": "Register data",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/User"
                    },
                    "token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "INTERNAL SERVER ERROR"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Login existing user",
        "operationId": "loginUser",
        "requestBody": {
          "description": "Login data",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/User"
                    },
                    "token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid data"
          }
        }
      }
    },
    "/auth/profile": {
      "get": {
        "tags": ["Auth"],
        "summary": "Get authorized user data",
        "operationId": "getAuthUser",
        "security": [
          {
            "jwt_auth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/User"
                    },
                    "token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "tags": ["Users"],
        "summary": "Access user info",
        "operationId": "getUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "tags": ["Users"],
        "summary": "Update user info",
        "security": [
          {
            "jwt_auth": []
          }
        ],
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/users/{userId}/trips": {
      "get": {
        "tags": ["Users"],
        "summary": "Get trips created by user",
        "operationId": "getUserTrips",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Trip"
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/trips": {
      "get": {
        "tags": ["Trips"],
        "summary": "Get all trips",
        "operationId": "getTrips",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Trip"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/trips/find": {
      "get": {
        "tags": ["Trips"],
        "summary": "Get trips by data and filter",
        "parameters": [
          {
            "name": "filter",
            "in": "path",
            "description": "filter param",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "operationId": "getTrips",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Trip"
                  }
                }
              }
            }
          }
        }
      }
    },

    "components": {
      "schemas": {
        "User": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-426614174000"
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "example": "2013-06-23T00:00:00.000Z"
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time",
              "example": "2013-06-23T00:00:00.000Z"
            },
            "username": {
              "type": "string"
            },
            "role": {
              "type": "string"
            }
          }
        },
        "Trip": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-426614174000"
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "example": "2013-06-23T00:00:00.000Z"
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time",
              "example": "2013-06-23T00:00:00.000Z"
            },
            "startPoint": {
              "type": "string"
            },
            "endPoint": {
              "type": "string"
            },
            "date": {
              "type": "date or string",
              "format": "date-time",
              "example": "2013-06-23T00:00:00.000Z"
            },
            "time": {
              "type": "date or string",
              "format": "date-time",
              "example": "2013-06-23T00:00:00.000Z"
            },
            "author": {
              "$ref": "#/components/schemas/User"
            },
            "driverRating": {
              "type": "number"
            },
            "passengerRating": {
              "type": "number"
            },
            "car": {
              "type": "string"
            }
          }
        }
      },
      "securitySchemes": {
        "jwt_auth": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "jwt"
        }
      }
    }
  }
}
